// Code generated by MockGen. DO NOT EDIT.
// Source: operations_type.go

// Package mocksStore is a generated GoMock package.
package mocksStore

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	modelOperaTionsType "github.com/jorgepiresg/ChallangePismo/model/operations_type"
)

// MockIOperationsType is a mock of IOperationsType interface.
type MockIOperationsType struct {
	ctrl     *gomock.Controller
	recorder *MockIOperationsTypeMockRecorder
}

// MockIOperationsTypeMockRecorder is the mock recorder for MockIOperationsType.
type MockIOperationsTypeMockRecorder struct {
	mock *MockIOperationsType
}

// NewMockIOperationsType creates a new mock instance.
func NewMockIOperationsType(ctrl *gomock.Controller) *MockIOperationsType {
	mock := &MockIOperationsType{ctrl: ctrl}
	mock.recorder = &MockIOperationsTypeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIOperationsType) EXPECT() *MockIOperationsTypeMockRecorder {
	return m.recorder
}

// GetByID mocks base method.
func (m *MockIOperationsType) GetByID(ctx context.Context, ID int) (modelOperaTionsType.OperationType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, ID)
	ret0, _ := ret[0].(modelOperaTionsType.OperationType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockIOperationsTypeMockRecorder) GetByID(ctx, ID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockIOperationsType)(nil).GetByID), ctx, ID)
}
