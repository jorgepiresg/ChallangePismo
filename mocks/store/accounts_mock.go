// Code generated by MockGen. DO NOT EDIT.
// Source: accounts.go

// Package mocksStore is a generated GoMock package.
package mocksStore

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	modelAccounts "github.com/jorgepiresg/ChallangePismo/model/accounts"
)

// MockIAccounts is a mock of IAccounts interface.
type MockIAccounts struct {
	ctrl     *gomock.Controller
	recorder *MockIAccountsMockRecorder
}

// MockIAccountsMockRecorder is the mock recorder for MockIAccounts.
type MockIAccountsMockRecorder struct {
	mock *MockIAccounts
}

// NewMockIAccounts creates a new mock instance.
func NewMockIAccounts(ctrl *gomock.Controller) *MockIAccounts {
	mock := &MockIAccounts{ctrl: ctrl}
	mock.recorder = &MockIAccountsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAccounts) EXPECT() *MockIAccountsMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIAccounts) Create(ctx context.Context, account modelAccounts.Create) (modelAccounts.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, account)
	ret0, _ := ret[0].(modelAccounts.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIAccountsMockRecorder) Create(ctx, account interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIAccounts)(nil).Create), ctx, account)
}

// GetByDocument mocks base method.
func (m *MockIAccounts) GetByDocument(ctx context.Context, document string) (modelAccounts.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByDocument", ctx, document)
	ret0, _ := ret[0].(modelAccounts.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByDocument indicates an expected call of GetByDocument.
func (mr *MockIAccountsMockRecorder) GetByDocument(ctx, document interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByDocument", reflect.TypeOf((*MockIAccounts)(nil).GetByDocument), ctx, document)
}

// GetByID mocks base method.
func (m *MockIAccounts) GetByID(ctx context.Context, ID string) (modelAccounts.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, ID)
	ret0, _ := ret[0].(modelAccounts.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockIAccountsMockRecorder) GetByID(ctx, ID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockIAccounts)(nil).GetByID), ctx, ID)
}
